/**
 * Keep the server in it's own file.
 * Eventually, we will add a socket server for the chat app
 */

// main deps
const http = require('http');
const https = require('https');
const spdy = require('spdy'); // eslint-ignore
const { readFileSync } = require('fs');
const socket = require('../src/server/socket');

require('local-env-var');

// load our server stuff
const app = require('../app');
const { log } = require('../src/server/logger');

// default to a given port
const port = process.env.PORT || 5000;

// set express var here as we need to attach to http server
app.set('port', port);

// create server object for socket + express
let server = http.createServer(app);
if (process.env.ENABLE_HTTPS === 'true') {
  log('debug', 'bin/www', 'creating HTTPS server');
  const options = {
    key: readFileSync('server-key.pem'),
    cert: readFileSync('server-cert.pem'),
  };
  server = https.createServer(options, app);
}

if (process.env.ENABLE_HTTP2 === 'true') {
  log('info', 'bin/www', 'creating HTTP2 server');
  const options = {
    key: readFileSync('server-key.pem'),
    cert: readFileSync('server-cert.pem'),
    allowHTTP1: true,
  };
  server = spdy.createServer(options, app);
}

// start a http server
server.listen(port);

// bind a websocket, if we desire
if (process.env.ENABLE_SOCKET === 'true') {
  log('debug', 'bin/www', 'binding websocket');
  socket.bind(server);
}

// inform us of the running server
/* eslint-disable */
server.on("listening", () => log('info', 'bin/www', `Server running on port //localhost:${port}`));